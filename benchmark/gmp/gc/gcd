#!/usr/bin/env ruby

require './gmp_require'

m = ARGV[0].to_i
n = ARGV[1].to_i
random_state = GMP::RandState.new

x = random_state.urandomb(m)
y = random_state.urandomb(n)

print "Calibrating CPU speed..."
STDOUT.flush
t = GMP::time { z = x.gcd(y) }
puts "done"

iterations = (1 + (1e4 / t)).to_i

print "Calculating the gcd of a %i-bit number and a %i-bit number %i times..." % [m, n, iterations]
STDOUT.flush

t0 = GMP::cputime
iterations.times do
  z = x.gcd(y)
end
ti = GMP::cputime - t0
  
puts "done!"
ops_per_sec = 1000.0 * iterations / ti
f = 100.0
decimals = 0
while true
  decimals += 1
  break if ops_per_sec > f
  f = f * 0.1
end

puts "RESULT: %#{decimals}f operations per second\n" % ops_per_sec
